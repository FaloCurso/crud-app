import { getOneEmployee, getEmployeeByNameSurname, getAllRecords, getRecordForUser, getRecordForDate, getRecordForUserAndDate, deleteRecord, updateRecord, getAllEmployees, createEmployee, deleteEmployee, updateEmployee } from "./crud.js";

document.addEventListener("DOMContentLoaded", () => {
    const employeeFullNameInput = document.getElementById("employeeFullName");
    const dateInput = document.getElementById("date");
    const searchButton = document.getElementById("searchButton");
    const recordsTableBody = document.getElementById("recordsTableBody");
    const employeesTableBody = document.getElementById("employeesTableBody");
    const addEmployeeForm = document.getElementById("addEmployeeForm");

    async function fetchEmployees() {
        const employees = await getAllEmployees();
        displayEmployees(employees);
    }

    async function displayEmployees(employees) {
        employeesTableBody.innerHTML = "";
    
        if (!employees || !employees.length) {
            employeesTableBody.innerHTML = "<tr><td colspan='6'>No se encontraron empleados</td></tr>";
            return;
        }
    
        for (const employee of employees) {
            const row = document.createElement("tr");
            row.innerHTML = `
              <td>${employee.id}</td>
              <td><input type="text" value="${employee.name}" class="edit-name"></td>
              <td><input type="text" value="${employee.surname}" class="edit-surname"></td>
              <td><input type="text" value="${employee.username}" class="edit-username"></td>
              <td><input type="checkbox" class="edit-admin" ${employee.admin ? 'checked' : ''}></td>
              <td>
                <button class="save-employee-btn" data-id="${employee.id}">Guardar</button>
                <button class="delete-employee-btn" data-id="${employee.id}">Eliminar</button>
              </td>
            `;
    
            employeesTableBody.appendChild(row);
        }

        document.querySelectorAll(".save-employee-btn").forEach(button => {
            button.addEventListener("click", async (event) => {
                const row = event.target.closest("tr");
                const employeeId = event.target.dataset.id;
                const newName = row.querySelector(".edit-name").value;
                const newSurname = row.querySelector(".edit-surname").value;
                const newUsername = row.querySelector(".edit-username").value;
                const newAdmin = row.querySelector(".edit-admin").checked;
    
                await updateEmployee(employeeId, { name: newName, surname: newSurname, username: newUsername, admin: newAdmin });
                fetchEmployees();
            });
        });
    
        document.querySelectorAll(".delete-employee-btn").forEach(button => {
            button.addEventListener("click", async (event) => {
                const employeeId = event.target.dataset.id;
                if (confirm("Â¿Seguro que deseas eliminar este empleado?")) {
                    await deleteEmployee(employeeId);
                    fetchEmployees();
                }
            });
        });
    }

    addEmployeeForm.addEventListener("submit", async (event) => {
        event.preventDefault();
        
        const name = document.getElementById("name").value;
        const surname = document.getElementById("surname").value;
        const username = document.getElementById("username").value;
        const password = document.getElementById("password").value;
        const admin = document.getElementById("admin").checked;
        const photo = document.getElementById("photo").value;
    
        await createEmployee({ name, surname, username, password, admin, photo });
        fetchEmployees();
        addEmployeeForm.reset();
    });

    fetchEmployees();
});